[gd_scene load_steps=6 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D left_camera;
uniform sampler2D right_camera;
uniform bool isEnabled = true;

void fragment()
{
	vec4 leftCol = texture(left_camera, SCREEN_UV);
	vec4 rightCol = texture(right_camera, SCREEN_UV);

	float pixelX = floor(FRAGCOORD.x);
	if (isEnabled)
	{
		COLOR = mix(rightCol, leftCol, mod(pixelX, 2.0));
	}
	else
	{
		COLOR = leftCol;
	}
}"
custom_defines = ""

[sub_resource type="ViewportTexture" id=2]
viewport_path = NodePath("ViewportContainer/Left")

[sub_resource type="ViewportTexture" id=3]
viewport_path = NodePath("ViewportContainer/Right")

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/isEnabled = true
shader_param/left_camera = SubResource( 2 )
shader_param/right_camera = SubResource( 3 )

[sub_resource type="GDScript" id=5]
script/source = "extends CanvasItem

func _process(_delta):
	if (Input.is_action_just_pressed(\"toggle_stereo\")):
		material.set(\"shader_param/isEnabled\", !material.get(\"shader_param/isEnabled\"));
"

[node name="InterlacedStereoCanvas" type="ColorRect"]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}
